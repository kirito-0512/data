26513,
ReversePolishnotation,

Infix notation
Reverse Polish notation (RPN), also known as reverse Łukasiewicz notation, Polish postfix notation or simply postfix notation, is a mathematical notation in which operators follow their operands, in contrast to Polish notation (PN), in which operators precede their operands. It does not need any parentheses as long as each operator has a fixed number of operands. The description "Polish" refers to the nationality of logician Jan Łukasiewicz,[1][2] who invented Polish notation in 1924.[3][4][5][6]
The first computer to use postfix notation, though it long remained essentially unknown outside of Germany, was Konrad Zuse's Z3 in 1941[7][8][9][10][11][12][13][14][15][excessive citations] as well as his Z4 in 1945. The reverse Polish scheme was again proposed in 1954 by Arthur Burks, Don Warren, and Jesse Wright[16] and was independently reinvented by Friedrich L. Bauer and Edsger W. Dijkstra in the early 1960s to reduce computer memory access and use the stack to evaluate expressions. The algorithms and notation for this scheme were extended by the Australian philosopher and computer scientist Charles L. Hamblin in the mid-1950s.[17][18][19][20][21][22]
During the 1970s and 1980s, Hewlett-Packard used RPN in all of their desktop and hand-held calculators, and has continued to use it in some models into the 2020s.[23][24]  In computer science, reverse Polish notation is used in stack-oriented programming languages such as Forth, STOIC, PostScript, RPL, and Joy.
In reverse Polish notation, the operators follow their operands. For example, to add 3 and 4 together, the expression is 3 4 + rather than 3 + 4. The expression 3 − 4 + 5 in conventional notation is 3 4 − 5 + in reverse Polish notation: 4 is first subtracted from 3, then 5 is added to it.
The concept of a stack, a last-in/first-out construct, is integral to the left-to-right evaluation of RPN. In the example 3 4 -, first the 3 is put onto the stack, then the 4; the 4 is now on top and the 3 below it. The subtraction operator removes the top two items from the stack, performs 3 - 4, and puts the result of -1 onto the stack.
The common terminology is that added items are pushed on the stack and removed items are popped.
The advantage of reverse Polish notation is that it removes the need for order of operations and parentheses that are required by infix notation and can be evaluated linearly, left-to-right. For example, the infix expression (3 × 4) + (5 × 6) becomes 3 4 × 5 6 × + in reverse Polish notation.
In comparison testing of reverse Polish notation with algebraic notation, reverse Polish has been found to lead to faster calculations, for two reasons. The first reason is that reverse Polish calculators do not need expressions to be parenthesized, so fewer operations need to be entered to perform typical calculations. Additionally, users of reverse Polish calculators made fewer mistakes than for other types of calculators.[25][26] Later research clarified that the increased speed from reverse Polish notation may be attributed to the smaller number of keystrokes needed to enter this notation, rather than to a smaller cognitive load on its users.[27] However, anecdotal evidence suggests that reverse Polish notation is more difficult for users to learn than algebraic notation.[26]
Edsger W. Dijkstra invented the shunting-yard algorithm to convert infix expressions to postfix expressions (reverse Polish notation), so named because its operation resembles that of a railroad shunting yard.
There are other ways of producing postfix expressions from infix expressions. Most operator-precedence parsers can be modified to produce postfix expressions; in particular, once an abstract syntax tree has been constructed, the corresponding postfix expression is given by a simple post-order traversal of that tree.
The first computer implementing a form of reverse Polish notation (but without the name), was Konrad Zuse's Z3, which he started to construct in 1938 and demonstrated publicly on 12 May 1941.[28][11][29][13] In dialog mode, it allowed operators to enter two operands followed by the desired operation.[7][8][9][10][11][12][13][14][15] It was destroyed on 21 December 1943 in a bombing raid.[11] With Zuse's help a first replica was built in 1961.[11] The 1945 Z4 also added a stack.[30][31]
Other early computers to implement architectures enabling reverse Polish notation were the English Electric Company's KDF9 machine, which was announced in 1960 and commercially available in 1963,[32] and the Burroughs B5000, announced in 1961 and also delivered in 1963:
Presumably, the KDF9 designers drew ideas from Hamblin's GEORGE (General Order Generator),[17][18][20] an autocode programming system written for a DEUCE computer installed at the University of Sydney, Australia, in 1957.[17][18][20][32]
One of the designers of the B5000, Robert S. Barton, later wrote that he developed reverse Polish notation independently of Hamblin sometime in 1958 after reading a 1954 textbook on symbolic logic by Irving Copi,[33][34][35] where he found a reference to Polish notation,[35] which made him read the works of Jan Łukasiewicz as well,[35] and before he was aware of Hamblin's work.
Friden introduced reverse Polish notation to the desktop calculator market with the EC-130, designed by Robert "Bob" Appleby Ragen,[36] supporting a four-level stack[5] in June 1963.[37] The successor EC-132 added a square root function in April 1965.[38] Around 1966, the Monroe Epic calculator supported an unnamed input scheme resembling RPN as well.[5]
 Hewlett-Packard engineers designed the 9100A Desktop Calculator in 1968 with reverse Polish notation[23] with only three stack levels with working registers X ("keyboard"), Y ("accumulate") and visible storage register Z ("temporary"),[39][40] a reverse Polish notation variant later referred to as three-level RPN. This calculator popularized reverse Polish notation among the scientific and engineering communities. The HP-35, the world's first handheld scientific calculator,[23] introduced the classical four-level RPN with its specific ruleset of the so-called operational (memory) stack[41] (later also called automatic memory stack[42][43]) in 1972.[44] In this scheme, the Enter ↑ key duplicates values into Y under certain conditions, and the top register gets duplicated on drops in order to ease some calculations and to save keystrokes.[43] HP used reverse Polish notation on every handheld calculator it sold, whether scientific, financial, or programmable, until it introduced the HP-10 adding machine calculator in 1977. By this time, HP was the leading manufacturer of calculators for professionals, including engineers and accountants.
Later calculators with LCD displays in the early 1980s, such as the HP-10C, HP-11C, HP-15C, HP-16C, and the financial HP-12C calculator also used reverse Polish notation. In 1988, Hewlett-Packard introduced a business calculator, the HP-19B, without reverse Polish notation, but its 1990 successor, the HP-19BII, gave users the option of using algebraic or reverse Polish notation again.
Around 1987, HP introduced RPL, an object-oriented successor to reverse Polish notation. It deviates from classical reverse Polish notation by using a stack only limited by the amount of available memory (instead of three or four fixed levels) and which could hold all kinds of data objects (including symbols, strings, lists, matrices, graphics, programs, etc.) instead of just numbers. It also changed the behaviour of the stack to no longer duplicate the top register on drops (since in an unlimited stack there is no longer a top register) and the behaviour of the Enter ↑ key so that it no longer duplicated values into Y, which had shown to sometimes cause confusion among users not familiar with the specific properties of the automatic memory stack. From 1990 to 2003, HP manufactured the HP-48 series of graphing RPL calculators, and in 2006 introduced the HP 50g.
As of 2011, Hewlett-Packard was offering the calculator models 12C, 12C Platinum, 17bII+, 20b, 30b, 33s, 35s, 48gII (RPL) and 50g (RPL) which support reverse Polish notation.[45] While calculators emulating classical models continue to support classical reverse Polish notation, new reverse Polish notation models feature a variant of reverse Polish notation, where the Enter ↑ key behaves as in RPL. This latter variant is sometimes known as entry RPN.[46] In 2013, the HP Prime introduced a 128-level form of entry RPN called advanced RPN. By mid-2023, only the 12C and 12C Platinum remain active HP models supporting reverse Polish notation.
The community-developed calculators WP 31S and WP 34S, which are based on the HP 20b/HP 30b hardware platform, support Hewlett-Packard-style classical reverse Polish notation with either a four- or an eight-level stack. A seven-level stack had been implemented in the MITS 7400C scientific desktop calculator in 1972[47][48][49] and an eight-level stack was already suggested by John A. Ball in 1978.[5]
In Britain, Clive Sinclair's Sinclair Scientific and Scientific Programmable models used reverse Polish notation.[50][51]
In 1974, Commodore produced the Minuteman *6 (MM6) without an enter  key and the Minuteman *6X (MM6X) with an enter  key, both implementing a form of two-level RPN. The SR4921 RPN came with a variant of four-level RPN with stack levels named X, Y, Z, and W (rather than T) and an Ent key (for "entry"). In contrast to Hewlett-Packard's reverse Polish notation implementation, W filled with 0 instead of its contents being duplicated on stack drops.[52]
Prinz and Prinztronic were own-brand trade names of the British Dixons photographic and electronic goods stores retail chain, later rebranded as Currys Digital stores, and became part of DSG International. A variety of calculator models was sold in the 1970s under the Prinztronic brand, all made for them by other companies.
Among these was the PROGRAM[53] Programmable Scientific Calculator which featured reverse Polish notation.
The Aircraft Navigation Computer Heathkit OC-1401/OCW-1401 used five-level RPN in 1978.
Soviet programmable calculators (MK-52, MK-61, B3-34 and earlier B3-21[54] models) used reverse Polish notation for both automatic mode and programming. Modern Russian calculators MK-161[55] and MK-152,[56] designed and manufactured in Novosibirsk since 2007 and offered by Semico,[57] are backwards compatible with them. Their extended architecture is also based on reverse Polish notation.
Existing implementations using reverse Polish notation include:


