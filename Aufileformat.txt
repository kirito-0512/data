2732,
Aufileformat,
The Au file format is a simple audio file format introduced by Sun Microsystems. The format was common on NeXT systems and on early Web pages. Originally it was headerless, being simply 8-bit μ-law-encoded data at an 8000 Hz sample rate.[1] Hardware from other vendors often used sample rates as high as 8192 Hz, often integer multiples of video clock signal frequencies. Newer files have a header that consists of six unsigned 32-bit words, an optional information chunk which is always of non-zero size, and then the data (in big-endian format).
Although the format now supports many audio encoding formats, it remains associated with the μ-law logarithmic encoding. This encoding was native to the SPARCstation 1 hardware, where SunOS exposed the encoding to application programs through the /dev/audio device file interface. This encoding and interface became a de facto standard for Unix sound.
All fields are stored in big-endian format, including the sample data.[4][5]
Values 0 through 255 are supposed to be assigned by a file format authority (was NeXT, now Oracle). Other values can be used for custom formats.[5]
In the older Sun version, its length had to be a non-zero multiple of 8 bytes. In some older implementations, the string is not properly NULL-terminated, but the offset remains reliable.[4]
The type of encoding depends on the value of the "encoding" field (word 3 of the header). Formats 2 through 7 are uncompressed linear PCM, therefore technically lossless (although not necessarily free of quantization error, especially in 8-bit form). Formats 1 and 27 are μ-law and A-law, respectively, both companding logarithmic representations of PCM, and arguably lossy as they pack what would otherwise be almost 16 bits of dynamic range into 8 bits of encoded data, even though this is achieved by an altered dynamic response and no data is actually "thrown away". Formats 23 through 26 are ADPCM, which is an early form of lossy compression, usually but not always with 4 bits of encoded data per audio sample (for 4:1 efficiency with 16-bit input, or 2:1 with 8-bit; equivalent to e.g. encoding CD quality MP3 at a 352kbit rate using a low quality encoder). Several of the others (number 8 through 22) are DSP commands or data, designed to be processed by the NeXT Music Kit software.
Note: PCM formats are encoded as signed data (as opposed to unsigned).
The current format supports only a single audio data segment per file. The variable-length annotation field is currently ignored by most audio applications.
Information box
{'Filename extension': '.au\n.snd', 'Internet media type': 'audio/basic (headerless format)[1]', 'Type code': 'public.au-audio[2]\npublic.ulaw-audio[3] (headerless variant)', 'Magic number': '.snd (newer versions)', 'Developed by': 'Sun Microsystems', 'Type of format': 'audio file format, container format', 'Container for': 'Audio, most often μ-law'}
